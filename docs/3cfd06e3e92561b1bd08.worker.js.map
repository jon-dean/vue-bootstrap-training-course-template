{"version":3,"sources":["webpack:///webpack/bootstrap 3cfd06e3e92561b1bd08","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/pdfjs-dist/build/pdf.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","byteLength","b64","length","placeHoldersCount","toByteArray","tmp","placeHolders","arr","len","Arr","L","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","output","parts","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","start","end","num","global","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","value","TypeError","ArrayBuffer","array","byteOffset","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","checked","copy","buffer","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","Infinity","leadSurrogate","trim","replace","stringtrim","base64clean","src","dst","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","factory","self","__w_pdfjs_require__","unreachable","warn","utf8StringToString","stringToUTF8String","stringToPDFString","stringToBytes","string32","shadow","setVerbosityLevel","ReadableStream","removeNullCharacters","readUint32","readUint16","log2","loadJpegStream","isEvalSupported","isLittleEndian","createValidAbsoluteUrl","isSameOrigin","isSpace","isString","isNum","isEmptyObj","isBool","isArrayBuffer","info","getVerbosityLevel","getLookupTableFactory","deprecated","createObjectURL","createPromiseCapability","createBlob","bytesToString","assert","arraysToBytes","arrayByteLength","FormatError","XRefParseException","Util","UnknownErrorException","UnexpectedResponseException","TextRenderingMode","StreamType","PasswordResponses","PasswordException","PageViewport","NotImplementedException","NativeImageDecoding","MissingPDFException","MissingDataException","MessageHandler","InvalidPDFException","AbortException","CMapCompressionType","ImageKind","FontType","AnnotationType","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","UNSUPPORTED_FEATURES","VERBOSITY_LEVELS","OPS","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","_typeof","iterator","constructor","_streams_polyfill","errors","warnings","infos","verbosity","msg","console","cond","message","details","status","begin","NullCharactersRegExp","rgbBuf","makeCssRgb","r","transform","m1","m2","applyTransform","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","p3","p4","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","orderedX","sort","orderedY","result","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","isInteger","romanBuf","romanStr","appendToArray","arr1","arr2","prependToArray","unshift","extendObj","obj1","obj2","key","getInheritableProperty","dict","getArray","has","inherit","base","prop","create","loadScript","callback","script","document","createElement","loaded","setAttribute","onload","getElementsByTagName","appendChild","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","width","height","centerX","centerY","fontScale","clone","convertToViewportPoint","convertToViewportRectangle","tl","br","convertToPdfPoint","PDFStringTranslateTable","capability","promise","Promise","resolve","reject","digits","contentType","Blob","URL","blob","ii","b1","b2","b3","resolveCall","fn","thisArg","wrapReason","reason","resolveOrReject","success","sourceName","targetName","comObj","_this","callbackId","streamId","postMessageTransfers","streamSinks","streamControllers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","isReply","error","action","_sourceName","_targetName","then","postMessage","makeReasonSerializable","_createStreamSink","addEventListener","actionName","handler","scope","send","transfers","sendWithPromise","sendWithStream","queueingStrategy","_this2","controller","startCapability","startCall","isClosed","desiredSize","pull","pullCapability","pullCall","cancel","cancelCapability","cancelCall","_this3","sendStreamRequest","_ref","chunk","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","close","onPull","onCancel","_this4","sendStreamResponse","_ref2","deleteStreamController","all","map","catch","destroy","removeEventListener","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","SOLID","DASHED","BEVELED","INSET","UNDERLINE","READONLY","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","INVISIBLE","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","UNKNOWN","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","NONE","BINARY","STREAM","DECODE","DISPLAY","NEED_PASSWORD","INCORRECT_PASSWORD","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","FILL","STROKE","FILL_STROKE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","item","itemLength","resultLength","strBuf","chunkEnd","initializer","ch","baseUrl","otherUrl","origin","other","url","absoluteUrl","protocol","isValidProtocol","ex","buffer8","Uint32Array","id","imageUrl","objs","img","Image","onerror","ceil","level","writable","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","EOF","Name","nameCache","nameValue","Cmd","cmd","cmdCache","cmdValue","Dict","nonSerializable","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","isRef","fetch","getRaw","getKeys","keys","forEach","empty","merge","dictArray","mergedDict","isDict","keyName","Ref","gen","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","clear","isName","isEOF","isCmd","isRefsEqual","v1","v2","isStream","getBytes","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","arrayBuffer","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","skip","reset","moveStart","makeSubStream","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","getBaseStreams","streams","shift","newLength","baseStreams","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","codeSize","codeBuf","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","kk","prevRow","up","upLeft","left","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","input","firstDigit","maxDecodeLength","digit","repeatHeader","source","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","it","store","uid","_Symbol","USE_SYMBOL","__g","core","hide","redefine","ctx","$export","own","exp","IS_FORCED","F","IS_GLOBAL","G","IS_PROTO","P","IS_BIND","B","S","expProto","U","W","R","__e","isObject","SRC","$toString","TPL","split","inspectSource","O","safe","isFunction","aFunction","dP","createDesc","f","exec","anObject","IE8_DOM_DEFINE","toPrimitive","Attributes","IObject","defined","ColorSpace","getRgb","srcOffset","rgb","getRgbItem","dest","destOffset","getRgbBuffer","count","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","bpc","comps","numComponentColors","needsResizing","numComps","allColors","destPos","rgbPos","colorMap","w1","h1","w2","h2","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","resizeRgbImage","usesZeroToOneRange","parse","cs","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","colorSpaces","resCS","mode","altIR","createIR","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","Float32Array","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","A","AG","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","sRGBTransferFunction","color","adjustToRange","decodeL","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","convertToFlat","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","px","random","$keys","enumBugKeys","def","TAG","tag","stat","isArrayIter","toLength","getIterFn","BREAK","RETURN","_exports","iterable","entries","ITERATOR","step","iterFn","index","next","done","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","makeStream","decryptString","findDefaultInlineStreamEnd","startPos","state","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","filterName","filter","filterZero","adler32","imageStream","imageBytes","cacheEntry","createStream","cacheKey","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","JpegStream","JpxStream","CCITTFaxStream","Jbig2Stream","knownCommands","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","parser","obj3","hints","hintsLength","getHints","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","is","bitmap","cof","propertyIsEnumerable","toInteger","ARG","T","tryGet","callee","shared","Constructor","forbiddenField","$$resolve","$$reject","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","meta","KEY","NEED","fastKey","getWeak","onFreeze","_jpg","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","drawWidth","drawHeight","getIR","forceDataSchema","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","InitialState","context","iCurr","fnArray","argsArray","lastProcessed","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","splice","kind","iFirstPIMXO","imageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","firstPIXOArg0","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","CHUNK_SIZE","addDependency","addDependencies","addOpList","opList","lastChunk","cached","getTransfers","operatorList","getGlyphsUnicode","getDingbatsGlyphsUnicode","valueOf","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","UNSCOPABLES","ArrayProto","classof","test","LIBRARY","Iterators","$iterCreate","setToStringTag","getPrototypeOf","BUGGY","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","values","documentElement","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","SPECIES","D","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","listener","now","port2","port1","onmessage","importScripts","removeChild","newPromiseCapability","promiseCapability","SAFE_CLOSING","riter","skipClosing","iter","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","callbackfn","_t","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","readChunk","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","_n","_d","_e","_s","_i","sliceIterator","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","flags","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","names","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","st","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","cleanup","promises","translatedFonts","translated","getPage","getPageDict","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","kidPromises","kid","pagesBeforeRef","addDefaultProtocolToUrl","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","jsUrl","RegExp","tryConvertUrlEncoding","href","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","token","skipUntil","dataLength","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","contentLength","endPos","checkPos","tokenStr","objToken","content","xrefTagOffset","startXRefParsedCache","topDict","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","substring","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","options","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","readNextChar","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","componentsCount","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","calculate","top","initializeTile","qcdOrQcc","QCC","QCD","COC","headerSize","lbox","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","resultImages","transformedTiles","y2","tile0","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","transformComponents","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","u","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","keyLength","encryptBlock","tmp2","decryptBlock","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","rcon","inv_s","mixCol","mix","decrypt128","s0","s1","s2","s3","encrypt128","cipherKey","t3","t4","expandKey128","bufferPosition","decryptBlock2","finalize","sourceLength","iv","plain","outputLength","lastBlock","psLen","cipher","decrypt256","encrypt256","expandKey256","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","decodeUserPassword","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","bytesLength","major","minor","hdrSize","offSize","parseOperand","parseFloat","parseFloatOperand","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","readSupplement","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","instance","_classCallCheck","PDFFunction","fnObj","parseArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","_ref3","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","fnsIR","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","roll","operators","operator","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","fnDict","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","_pdf_manager","_is_node","_is_node2","default","maybePort","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","headersReady","setup","testMessageProcessed","supportTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","docId","workerHandlerName","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","pdfFile","flushChunks","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","pageNum","Date","getOperatorList","renderInteractiveForms","featureId","wrappedException","minimumStackMessage","sink","extractTextContent","normalizeWhitespace","combineTextItems","waitOn","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","setupDoc","initializeFromPort","PDFJS","compatibilityChecked","globalScope","isNodeJS","userAgent","navigator","isAndroid","isIOSChrome","isIE","isIOS","isSafari","hasDOM","btoa","atob","locale","userLanguage","disableRange","disableStream","maxCanvasPixels","disableFullscreen","scripts","Element","parentNode","WeakMap","hasWorkingUrl","pathname","relative","relativePathDotMapping","ALPHA","ALPHANUMERIC","JURL","_isInvalid","_url","authority","_username","_password","_isRelative","host","_query","_fragment","_scheme","_port","_host","hostname","_path","_schemeData","search","_","OriginalURL","revokeObjectURL","isRelativeScheme","scheme","invalid","IDNAToASCII","percentEscape","percentEscapeQuery","stateOverride","cursor","seenAt","seenBracket","loop","nextC","nextNextC","cp","tempC","temp","$includes","$at","iterated","point","TO_STRING","dPs","IE_PROTO","Empty","_createDict","iframeDocument","iframe","display","contentWindow","open","lt","Properties","ObjectProto","addToUnscopables","_k","Arguments","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","promiseResolve","$Promise","isNode","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","chain","_c","_v","ok","reaction","fail","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","wrapper","executor","onFulfilled","onRejected","$index","alreadyCalled","race","getIteratorMethod","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","standalone","toggle","createTextNode","observe","characterData","DESCRIPTORS","finally","onFinally","try","InternalMap","each","weak","fails","validate","uncaughtFrozenStore","ufstore","$WeakMap","freeze","getConstructor","_f","original","gOPS","pIE","$assign","aLen","getSymbols","isEnum","getOwnPropertySymbols","redefineAll","createArrayMethod","$has","arrayFind","arrayFindIndex","_l","UncaughtFrozenStore","findUncaughtFrozen","delete","ADDER","$iterDetect","inheritIfRequired","common","IS_WEAK","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","setPrototypeOf","buggy","gOPD","getOwnPropertyDescriptor","COLLECTION","of","mapping","cb","mapFn","nextItem","$values","isEntries","isReadableStreamSupported","_typeof2","IsPropertyKey","argument","Call","V","typeIsObject","createDataProperty","createArrayFromList","elements","ArrayBufferCopy","CreateIterResultObject","IsFiniteNonNegativeNumber","InvokeOrNoop","PromiseInvokeOrNoop","returnValueE","PromiseInvokeOrPerformFallback","argsF","methodE","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","highWaterMark","ValidateAndNormalizeQueuingStrategy","AssertionError","rethrowAssertionErrorRejection","_require","_require2","_require3","DequeueValue","EnqueueValueWithSize","PeekQueueValue","ResetQueue","WritableStream","underlyingSink","_ref$highWaterMark","_state","_storedError","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","WritableStreamDefaultController","__startSteps","IsWritableStream","streamBrandCheckException","IsWritableStreamLocked","WritableStreamAbort","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamDealWithRejection","WritableStreamFinishErroring","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","__errorSteps","storedError","abortRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","__abortSteps","WritableStreamFinishInFlightClose","_closedPromise_resolve","_closedPromise_reject","_closedPromiseState","defaultWriterClosedPromiseResolve","WritableStreamCloseQueuedOrInFlight","defaultWriterClosedPromiseReject","_closedPromise","WritableStreamUpdateBackpressure","backpressure","_readyPromise_resolve","_readyPromise_reject","_readyPromise","_readyPromiseState","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","WritableStreamDefaultControllerError","WritableStreamDefaultWriterCloseWithErrorPropagation","_ownerWritableStream","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterAbort","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterGetDesiredSize","closeRequest","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDefaultWriterEnsureClosedPromiseRejected","defaultWriterClosedPromiseResetToRejected","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","releasedError","strategySize","_strategySize","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","writeRequest","WritableStreamAddWriteRequest","writeRecord","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","_underlyingSink","_queue","_queueTotalSize","normalizedStrategy","_strategyHWM","IsWritableStreamDefaultController","startResult","WritableStreamMarkCloseRequestInFlight","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","container","_require4","_require5","underlyingSource","_disturbed","_readableStreamController","ReadableByteStreamController","ReadableStreamDefaultController","IsReadableStream","IsReadableStreamLocked","ReadableStreamCancel","AcquireReadableStreamDefaultReader","ReadableStreamBYOBReader","readable","ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue","pipeTo","preventClose","preventAbort","preventCancel","Boolean","shuttingDown","currentWrite","isOrBecomesErrored","shutdownWithAction","shutdown","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","newError","isError","ReadableStreamReaderGenericRelease","pipeLoop","ReadableStreamDefaultReaderRead","branches","ReadableStreamTee","ReadableStreamDefaultReader","cloneForBranch2","teeState","closedOrErrored","canceled1","canceled2","reason1","reason2","branch1","_branch1","branch2","_branch2","_teeState","ReadableStreamDefaultControllerClose","value1","value2","ReadableStreamDefaultControllerEnqueue","create_ReadableStreamTeePullFunction","_cloneForBranch2","cancel1","compositeReason","cancelResult","create_ReadableStreamTeeBranch1CancelFunction","cancel2","create_ReadableStreamTeeBranch2CancelFunction","underlyingSource1","branch1Stream","underlyingSource2","branch2Stream","ReadableStreamDefaultControllerError","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","readIntoRequest","_readIntoRequests","ReadableStreamAddReadRequest","IsReadableStreamDefaultReader","readRequest","_readRequests","ReadableStreamClose","__cancelSteps","defaultReaderClosedPromiseResolve","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","ReadableStreamHasDefaultReader","IsReadableStreamDisturbed","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamReaderGenericInitialize","defaultReaderBrandCheckException","_ownerReadableStream","readerLockException","ReadableStreamReaderGenericCancel","IsReadableByteStreamController","byobReaderBrandCheckException","_controlledReadableStream","elementSize","DataView","BYTES_PER_ELEMENT","ctor","pullIntoDescriptor","bytesFilled","readerType","_pendingPullIntos","emptyView","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","_closeRequested","ReadableByteStreamControllerError","ReadableByteStreamControllerCallPullIfNeeded","ReadableByteStreamControllerPullInto","ReadableStreamBYOBReaderRead","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","defaultReaderClosedPromiseResetToRejected","__pullSteps","_underlyingSource","_pullAgain","_pulling","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerErrorIfNeeded","IsReadableStreamDefaultController","defaultControllerBrandCheckException","pendingPromise","ReadableStreamDefaultControllerShouldCallPull","ReadableStreamBYOBRequest","_associatedReadableByteStreamController","_view","bytesWritten","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","ReadableByteStreamControllerRespondInternal","ReadableByteStreamControllerRespond","firstDescriptor","ReadableByteStreamControllerRespondWithNewView","underlyingByteSource","_underlyingByteSource","ReadableByteStreamControllerClearPendingPullIntos","autoAllocateChunkSize","_autoAllocateChunkSize","byteStreamControllerBrandCheckException","firstPendingPullInto","ReadableByteStreamControllerClose","transferredBuffer","ReadableByteStreamControllerEnqueueChunkToQueue","transferredView","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerEnqueue","viewE","bufferE","_byobRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerShouldCallPull","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","ReadableStreamFulfillReadIntoRequest","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInClosedState","remainderSize","ReadableByteStreamControllerRespondInReadableState","transformStream","writableStream","TransformStream","TransformStreamEnqueueToReadable","_errored","_readableClosed","_readableController","TransformStreamErrorIfNeeded","TransformStreamSetBackpressure","TransformStreamCloseReadableInternal","TransformStreamErrorInternal","_writableDone","_writableController","TransformStreamReadableReadyPromise","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamDefaultTransform","transformStreamController","_controlledTransformStream","IsTransformStreamDefaultController","IsTransformStream","TransformStreamSink","startPromise","_transformStream","_startPromise","_transforming","transformer","_transformer","_transformStreamController","TransformStreamTransform","TransformStreamSource","TransformStreamDefaultController","TransformStreamCloseReadable","TransformStreamError","readableController","readableStrategy","writableStrategy","startPromise_resolve","_readable","_writable","_document","BasePdfManager","_docId","_docBaseUrl","ensureXRef","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","getPageProp","getInheritedPageProp","valueArray","resources","mediaBox","cropBox","intersection","getContentStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","find","needle","backwards","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","_ccitt","ccittFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","decodeBitmapTemplate0","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","getSymbolDictionaryHuffmanTables","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeTablesSegment","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","parseJbig2Chunks","JpegError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","receiver","desc","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","flag","_hasFlag","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","bbox","maxY","getTransformMatrix","_isViewable","_isPrintable","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","element","radius","_Annotation","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","comb","_WidgetAnnotation2","checkBox","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","multiSelect","_Annotation2","_this6","_preparePopup","_Annotation3","_this7","_Annotation4","_this8","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","lineCoordinates","_Annotation6","_this10","_Annotation7","_this11","_Annotation8","_this12","rawVertices","vertices","_PolylineAnnotation","_this13","_Annotation9","_this14","_Annotation10","_this15","_Annotation11","_this16","_Annotation12","_this17","_Annotation13","_this18","_Annotation14","_this19","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoder","_ref$forceDataSchema","_ref2$options","fetchBuiltInCMap","cachedCMap","compressionType","canDecode","image","isDecodable","colorSpace","isSupported","TimeSlotManager","endTime","deferred","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","buildPaintImageXObject","inline","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","isInline","createImageData","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","gStateObj","gStateKeys","_loop","normalizeBlendMode","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref3$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","savedStatesDepth","promiseBody","stop","resolveXObject","rejectXObject","fontSize","combinedGlyphs","arrItem","strokeColorSpace","shadingRes","patternIR","dictName","extGState","_ref4$stateManager","_ref4$normalizeWhites","_ref4$combineTextItem","_ref4$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","runBidiTransform","textChunk","bidiResult","bidi","replaceWhitespace","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","getOPMap","numArgs","variableArgs","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","searchParams","checksum","addTable","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","ID","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","VALID_TABLES","readTables","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","foldTTTable","isTrueTypeCollectionFile","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionHeader","potentialHeader","potentialTables","nameEntry","readTrueTypeCollectionData","cffFile","isTrueType","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","fpgm","prep","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","numOfMetrics","numMissing","sanitizeMetrics","locaLength","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","glyphsInfo","loca","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","readPostScriptTable","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","compiler","namePrototype","builder","tableTag","builtInEncoding","adjustToUnicode","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","actualLength","EEXEC_SIGNATURE","streamStartPos","getHeaderBlock","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","achar","bchar","parseGlyfTable","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","decryptAscii","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","xi","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildB","buildFigureFromPatch","mesh","figure","figures","coords","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","ps","verticesLeft","coord","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","decodeBuffer","getComponents","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","imageLength","maybeUndoPreblend"],"mappings":"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,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EA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,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,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AAA,OAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,OAEA8V,MAAA,KACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,IAAA,QAEA8V,MAAA,MACA9V,I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ve,IAAAgN,QACAssH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAAsB,UACAg4H,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAAiN,OACAqsH,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAAkN,OACAosH,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAAmN,QACAmsH,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAAoN,SACAksH,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAAqN,SACAisH,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAAsN,UACAgsH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAAuN,UACA+rH,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAAwN,OACA8rH,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAAyN,YACA6rH,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAA1N,KACAgnI,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAA1N,KACAgnI,QAAA,EACAC,cAAA,GAEA33G,EAAA,OACApI,GAAA+E,EAAAve,IAAA0N,OACA4rH,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAA2N,WACA2rH,QAAA,EACAC,cAAA,GAEA33G,EAAA,OACApI,GAAA+E,EAAAve,IAAA4N,aACA0rH,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAA6N,gBACAyrH,QAAA,EACAC,cAAA,GAEA33G,EAAA,OACApI,GAAA+E,EAAAve,IAAA8N,kBACAwrH,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAA+N,QACAurH,QAAA,EACAC,cAAA,GAEA33G,EAAA,GACApI,GAAA+E,EAAAve,IAAAgO,KACAsrH,QAAA,EACAC,cAAA,GAEA33G,EAAA,OACApI,GAAA+E,EAAAve,IAAAiO,OACAqrH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAAkO,UACAorH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAAmO,QACAmrH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAAoO,eACAkrH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAAqO,eACAirH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAAsO,UACAgrH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAAuO,WACA+qH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAAwO,QACA8qH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAAyO,qBACA6qH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAA0O,YACA4qH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAA2O,SACA2qH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAA4O,mBACA0qH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAA6O,cACAyqH,QAAA,EACAC,cAAA,GAEA33G,EAAA,OACApI,GAAA+E,EAAAve,IAAA8O,SACAwqH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAA+O,SACAuqH,QAAA,EACAC,cAAA,GAEA33G,EAAA,IACApI,GAAA+E,EAAAve,IAAAgP,eACAsqH,QAAA,EACAC,cAAA,GAEA33G,EAAA,MACApI,GAAA+E,EAAAve,IAAAiP,iBACAqqH,QAAA,EACAC,cAAA,GAEA33G,EAAA,MACApI,G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ACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SA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","file":"vue-bootstrap-training-course-template/3cfd06e3e92561b1bd08.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"wk5V\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3cfd06e3e92561b1bd08","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = EKta\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = EuP9\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = sOR5\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = ujcs\n// module chunks = 0","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 73);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.loadJpegStream = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VERBOSITY_LEVELS = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(75);\n\nvar _streams_polyfill = __w_pdfjs_require__(125);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VERBOSITY_LEVELS = {\n  errors: 0,\n  warnings: 1,\n  infos: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VERBOSITY_LEVELS.warnings;\nfunction setVerbosityLevel(level) {\n  verbosity = level;\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.infos) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.warnings) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n    while (dict && !dict.has(name)) {\n      dict = dict.get('Parent');\n    }\n    if (!dict) {\n      return null;\n    }\n    return getArray ? dict.getArray(name) : dict.get(name);\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new AbortException(reason.message);\n    case 'MissingPDFException':\n      return new MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n    return reason;\n  }\n  return new UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _streams_polyfill.ReadableStream({\n      start: function start(controller) {\n        var startCapability = createPromiseCapability();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = createPromiseCapability();\n    var sendStreamRequest = function sendStreamRequest(_ref) {\n      var stream = _ref.stream,\n          chunk = _ref.chunk,\n          transfers = _ref.transfers,\n          success = _ref.success,\n          reason = _ref.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref2) {\n      var stream = _ref2.stream,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nfunction loadJpegStream(id, imageUrl, objs) {\n  var img = new Image();\n  img.onload = function loadJpegStream_onloadClosure() {\n    objs.resolve(id, img);\n  };\n  img.onerror = function loadJpegStream_onerrorClosure() {\n    objs.resolve(id, null);\n    warn('Error during JPEG image loading');\n  };\n  img.src = imageUrl;\n}\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.loadJpegStream = loadJpegStream;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(49)('wks');\nvar uid = __w_pdfjs_require__(22);\nvar _Symbol = __w_pdfjs_require__(5).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar core = __w_pdfjs_require__(7);\nvar hide = __w_pdfjs_require__(12);\nvar redefine = __w_pdfjs_require__(10);\nvar ctx = __w_pdfjs_require__(11);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.3' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(9);\nvar SRC = __w_pdfjs_require__(22)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(7).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(16);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar createDesc = __w_pdfjs_require__(28);\nmodule.exports = __w_pdfjs_require__(13) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(13) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(29);\nvar defined = __w_pdfjs_require__(30);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(93);\nvar enumBugKeys = __w_pdfjs_require__(53);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(15).f;\nvar has = __w_pdfjs_require__(9);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar call = __w_pdfjs_require__(98);\nvar isArrayIter = __w_pdfjs_require__(99);\nvar anObject = __w_pdfjs_require__(8);\nvar toLength = __w_pdfjs_require__(31);\nvar getIterFn = __w_pdfjs_require__(100);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt_stream = __w_pdfjs_require__(129);\n\nvar _jbig2_stream = __w_pdfjs_require__(130);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx_stream = __w_pdfjs_require__(133);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref);\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length,\n          i,\n          ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = b % 65521 << 16 | a % 65521;\n        var cacheEntry = this.imageCache[adler32];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar document = __w_pdfjs_require__(5).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(18);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(18);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(49)('keys');\nvar uid = __w_pdfjs_require__(22);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(30);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(16);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(10);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(22)('meta');\nvar isObject = __w_pdfjs_require__(3);\nvar has = __w_pdfjs_require__(9);\nvar setDesc = __w_pdfjs_require__(15).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(14)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _jpg = __w_pdfjs_require__(132);\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n};\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(13) && !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(27)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(17);\nvar toLength = __w_pdfjs_require__(31);\nvar toAbsoluteIndex = __w_pdfjs_require__(79);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(4)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(12)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar test = {};\ntest[__w_pdfjs_require__(4)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(10)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar $export = __w_pdfjs_require__(6);\nvar redefine = __w_pdfjs_require__(10);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(9);\nvar Iterators = __w_pdfjs_require__(19);\nvar $iterCreate = __w_pdfjs_require__(90);\nvar setToStringTag = __w_pdfjs_require__(24);\nvar getPrototypeOf = __w_pdfjs_require__(94);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = !BUGGY && $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(5).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(95);\nvar getKeys = __w_pdfjs_require__(23);\nvar redefine = __w_pdfjs_require__(10);\nvar global = __w_pdfjs_require__(5);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar wks = __w_pdfjs_require__(4);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar aFunction = __w_pdfjs_require__(16);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar invoke = __w_pdfjs_require__(101);\nvar html = __w_pdfjs_require__(54);\nvar cel = __w_pdfjs_require__(27);\nvar global = __w_pdfjs_require__(5);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(18)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar IObject = __w_pdfjs_require__(29);\nvar toObject = __w_pdfjs_require__(35);\nvar toLength = __w_pdfjs_require__(31);\nvar asc = __w_pdfjs_require__(108);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          var type = labelDict.get('Type');\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          var s = labelDict.get('S');\n          if (s && !(0, _primitives.isName)(s)) {\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n          }\n          style = s ? s.name : null;\n          var p = labelDict.get('P');\n          if (p && !(0, _util.isString)(p)) {\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n          }\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n          var st = labelDict.get('St');\n          if (st && !(Number.isInteger(st) && st >= 1)) {\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n          }\n          currentIndex = st || 1;\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentLabel = '';\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          var objId = currentNode.objId;\n          if (objId && !pageKidsCountCache.has(objId)) {\n            pageKidsCountCache.put(objId, count);\n          }\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey128(cipherKey) {\n    var b = 176,\n        result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3],\n          t2 = result[j - 2],\n          t3 = result[j - 1],\n          t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 16];\n        j++;\n        result[j] = t2 ^= result[j - 16];\n        j++;\n        result[j] = t3 ^= result[j - 16];\n        j++;\n        result[j] = t4 ^= result[j - 16];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt128(input, key) {\n    var t, u, v, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey256(cipherKey) {\n    var b = 240,\n        result = new Uint8Array(b);\n    var r = 1;\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      var t1, t2, t3, t4;\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        t1 = result[j - 3];\n        t2 = result[j - 2];\n        t3 = result[j - 1];\n        t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 32];\n        j++;\n        result[j] = t2 ^= result[j - 32];\n        j++;\n        result[j] = t3 ^= result[j - 32];\n        j++;\n        result[j] = t4 ^= result[j - 32];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt256(input, key) {\n    var t, u, v, i, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _charsets = __w_pdfjs_require__(138);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\xA8'] = ' \\u0308';\n  t['\\xAF'] = ' \\u0304';\n  t['\\xB4'] = ' \\u0301';\n  t['\\xB5'] = '\\u03BC';\n  t['\\xB8'] = ' \\u0327';\n  t['\\u0132'] = 'IJ';\n  t['\\u0133'] = 'ij';\n  t['\\u013F'] = 'L\\xB7';\n  t['\\u0140'] = 'l\\xB7';\n  t['\\u0149'] = '\\u02BCn';\n  t['\\u017F'] = 's';\n  t['\\u01C4'] = 'D\\u017D';\n  t['\\u01C5'] = 'D\\u017E';\n  t['\\u01C6'] = 'd\\u017E';\n  t['\\u01C7'] = 'LJ';\n  t['\\u01C8'] = 'Lj';\n  t['\\u01C9'] = 'lj';\n  t['\\u01CA'] = 'NJ';\n  t['\\u01CB'] = 'Nj';\n  t['\\u01CC'] = 'nj';\n  t['\\u01F1'] = 'DZ';\n  t['\\u01F2'] = 'Dz';\n  t['\\u01F3'] = 'dz';\n  t['\\u02D8'] = ' \\u0306';\n  t['\\u02D9'] = ' \\u0307';\n  t['\\u02DA'] = ' \\u030A';\n  t['\\u02DB'] = ' \\u0328';\n  t['\\u02DC'] = ' \\u0303';\n  t['\\u02DD'] = ' \\u030B';\n  t['\\u037A'] = ' \\u0345';\n  t['\\u0384'] = ' \\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = 'a\\u02BE';\n  t['\\u1FBD'] = ' \\u0313';\n  t['\\u1FBF'] = ' \\u0313';\n  t['\\u1FC0'] = ' \\u0342';\n  t['\\u1FFE'] = ' \\u0314';\n  t['\\u2002'] = ' ';\n  t['\\u2003'] = ' ';\n  t['\\u2004'] = ' ';\n  t['\\u2005'] = ' ';\n  t['\\u2006'] = ' ';\n  t['\\u2008'] = ' ';\n  t['\\u2009'] = ' ';\n  t['\\u200A'] = ' ';\n  t['\\u2017'] = ' \\u0333';\n  t['\\u2024'] = '.';\n  t['\\u2025'] = '..';\n  t['\\u2026'] = '...';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '!!';\n  t['\\u203E'] = ' \\u0305';\n  t['\\u2047'] = '??';\n  t['\\u2048'] = '?!';\n  t['\\u2049'] = '!?';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = ' ';\n  t['\\u20A8'] = 'Rs';\n  t['\\u2100'] = 'a/c';\n  t['\\u2101'] = 'a/s';\n  t['\\u2103'] = '\\xB0C';\n  t['\\u2105'] = 'c/o';\n  t['\\u2106'] = 'c/u';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\xB0F';\n  t['\\u2116'] = 'No';\n  t['\\u2121'] = 'TEL';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = 'FAX';\n  t['\\u2160'] = 'I';\n  t['\\u2161'] = 'II';\n  t['\\u2162'] = 'III';\n  t['\\u2163'] = 'IV';\n  t['\\u2164'] = 'V';\n  t['\\u2165'] = 'VI';\n  t['\\u2166'] = 'VII';\n  t['\\u2167'] = 'VIII';\n  t['\\u2168'] = 'IX';\n  t['\\u2169'] = 'X';\n  t['\\u216A'] = 'XI';\n  t['\\u216B'] = 'XII';\n  t['\\u216C'] = 'L';\n  t['\\u216D'] = 'C';\n  t['\\u216E'] = 'D';\n  t['\\u216F'] = 'M';\n  t['\\u2170'] = 'i';\n  t['\\u2171'] = 'ii';\n  t['\\u2172'] = 'iii';\n  t['\\u2173'] = 'iv';\n  t['\\u2174'] = 'v';\n  t['\\u2175'] = 'vi';\n  t['\\u2176'] = 'vii';\n  t['\\u2177'] = 'viii';\n  t['\\u2178'] = 'ix';\n  t['\\u2179'] = 'x';\n  t['\\u217A'] = 'xi';\n  t['\\u217B'] = 'xii';\n  t['\\u217C'] = 'l';\n  t['\\u217D'] = 'c';\n  t['\\u217E'] = 'd';\n  t['\\u217F'] = 'm';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '(1)';\n  t['\\u2475'] = '(2)';\n  t['\\u2476'] = '(3)';\n  t['\\u2477'] = '(4)';\n  t['\\u2478'] = '(5)';\n  t['\\u2479'] = '(6)';\n  t['\\u247A'] = '(7)';\n  t['\\u247B'] = '(8)';\n  t['\\u247C'] = '(9)';\n  t['\\u247D'] = '(10)';\n  t['\\u247E'] = '(11)';\n  t['\\u247F'] = '(12)';\n  t['\\u2480'] = '(13)';\n  t['\\u2481'] = '(14)';\n  t['\\u2482'] = '(15)';\n  t['\\u2483'] = '(16)';\n  t['\\u2484'] = '(17)';\n  t['\\u2485'] = '(18)';\n  t['\\u2486'] = '(19)';\n  t['\\u2487'] = '(20)';\n  t['\\u2488'] = '1.';\n  t['\\u2489'] = '2.';\n  t['\\u248A'] = '3.';\n  t['\\u248B'] = '4.';\n  t['\\u248C'] = '5.';\n  t['\\u248D'] = '6.';\n  t['\\u248E'] = '7.';\n  t['\\u248F'] = '8.';\n  t['\\u2490'] = '9.';\n  t['\\u2491'] = '10.';\n  t['\\u2492'] = '11.';\n  t['\\u2493'] = '12.';\n  t['\\u2494'] = '13.';\n  t['\\u2495'] = '14.';\n  t['\\u2496'] = '15.';\n  t['\\u2497'] = '16.';\n  t['\\u2498'] = '17.';\n  t['\\u2499'] = '18.';\n  t['\\u249A'] = '19.';\n  t['\\u249B'] = '20.';\n  t['\\u249C'] = '(a)';\n  t['\\u249D'] = '(b)';\n  t['\\u249E'] = '(c)';\n  t['\\u249F'] = '(d)';\n  t['\\u24A0'] = '(e)';\n  t['\\u24A1'] = '(f)';\n  t['\\u24A2'] = '(g)';\n  t['\\u24A3'] = '(h)';\n  t['\\u24A4'] = '(i)';\n  t['\\u24A5'] = '(j)';\n  t['\\u24A6'] = '(k)';\n  t['\\u24A7'] = '(l)';\n  t['\\u24A8'] = '(m)';\n  t['\\u24A9'] = '(n)';\n  t['\\u24AA'] = '(o)';\n  t['\\u24AB'] = '(p)';\n  t['\\u24AC'] = '(q)';\n  t['\\u24AD'] = '(r)';\n  t['\\u24AE'] = '(s)';\n  t['\\u24AF'] = '(t)';\n  t['\\u24B0'] = '(u)';\n  t['\\u24B1'] = '(v)';\n  t['\\u24B2'] = '(w)';\n  t['\\u24B3'] = '(x)';\n  t['\\u24B4'] = '(y)';\n  t['\\u24B5'] = '(z)';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '::=';\n  t['\\u2A75'] = '==';\n  t['\\u2A76'] = '===';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = ' \\u3099';\n  t['\\u309C'] = ' \\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '(\\u1100)';\n  t['\\u3201'] = '(\\u1102)';\n  t['\\u3202'] = '(\\u1103)';\n  t['\\u3203'] = '(\\u1105)';\n  t['\\u3204'] = '(\\u1106)';\n  t['\\u3205'] = '(\\u1107)';\n  t['\\u3206'] = '(\\u1109)';\n  t['\\u3207'] = '(\\u110B)';\n  t['\\u3208'] = '(\\u110C)';\n  t['\\u3209'] = '(\\u110E)';\n  t['\\u320A'] = '(\\u110F)';\n  t['\\u320B'] = '(\\u1110)';\n  t['\\u320C'] = '(\\u1111)';\n  t['\\u320D'] = '(\\u1112)';\n  t['\\u320E'] = '(\\u1100\\u1161)';\n  t['\\u320F'] = '(\\u1102\\u1161)';\n  t['\\u3210'] = '(\\u1103\\u1161)';\n  t['\\u3211'] = '(\\u1105\\u1161)';\n  t['\\u3212'] = '(\\u1106\\u1161)';\n  t['\\u3213'] = '(\\u1107\\u1161)';\n  t['\\u3214'] = '(\\u1109\\u1161)';\n  t['\\u3215'] = '(\\u110B\\u1161)';\n  t['\\u3216'] = '(\\u110C\\u1161)';\n  t['\\u3217'] = '(\\u110E\\u1161)';\n  t['\\u3218'] = '(\\u110F\\u1161)';\n  t['\\u3219'] = '(\\u1110\\u1161)';\n  t['\\u321A'] = '(\\u1111\\u1161)';\n  t['\\u321B'] = '(\\u1112\\u1161)';\n  t['\\u321C'] = '(\\u110C\\u116E)';\n  t['\\u321D'] = '(\\u110B\\u1169\\u110C\\u1165\\u11AB)';\n  t['\\u321E'] = '(\\u110B\\u1169\\u1112\\u116E)';\n  t['\\u3220'] = '(\\u4E00)';\n  t['\\u3221'] = '(\\u4E8C)';\n  t['\\u3222'] = '(\\u4E09)';\n  t['\\u3223'] = '(\\u56DB)';\n  t['\\u3224'] = '(\\u4E94)';\n  t['\\u3225'] = '(\\u516D)';\n  t['\\u3226'] = '(\\u4E03)';\n  t['\\u3227'] = '(\\u516B)';\n  t['\\u3228'] = '(\\u4E5D)';\n  t['\\u3229'] = '(\\u5341)';\n  t['\\u322A'] = '(\\u6708)';\n  t['\\u322B'] = '(\\u706B)';\n  t['\\u322C'] = '(\\u6C34)';\n  t['\\u322D'] = '(\\u6728)';\n  t['\\u322E'] = '(\\u91D1)';\n  t['\\u322F'] = '(\\u571F)';\n  t['\\u3230'] = '(\\u65E5)';\n  t['\\u3231'] = '(\\u682A)';\n  t['\\u3232'] = '(\\u6709)';\n  t['\\u3233'] = '(\\u793E)';\n  t['\\u3234'] = '(\\u540D)';\n  t['\\u3235'] = '(\\u7279)';\n  t['\\u3236'] = '(\\u8CA1)';\n  t['\\u3237'] = '(\\u795D)';\n  t['\\u3238'] = '(\\u52B4)';\n  t['\\u3239'] = '(\\u4EE3)';\n  t['\\u323A'] = '(\\u547C)';\n  t['\\u323B'] = '(\\u5B66)';\n  t['\\u323C'] = '(\\u76E3)';\n  t['\\u323D'] = '(\\u4F01)';\n  t['\\u323E'] = '(\\u8CC7)';\n  t['\\u323F'] = '(\\u5354)';\n  t['\\u3240'] = '(\\u796D)';\n  t['\\u3241'] = '(\\u4F11)';\n  t['\\u3242'] = '(\\u81EA)';\n  t['\\u3243'] = '(\\u81F3)';\n  t['\\u32C0'] = '1\\u6708';\n  t['\\u32C1'] = '2\\u6708';\n  t['\\u32C2'] = '3\\u6708';\n  t['\\u32C3'] = '4\\u6708';\n  t['\\u32C4'] = '5\\u6708';\n  t['\\u32C5'] = '6\\u6708';\n  t['\\u32C6'] = '7\\u6708';\n  t['\\u32C7'] = '8\\u6708';\n  t['\\u32C8'] = '9\\u6708';\n  t['\\u32C9'] = '10\\u6708';\n  t['\\u32CA'] = '11\\u6708';\n  t['\\u32CB'] = '12\\u6708';\n  t['\\u3358'] = '0\\u70B9';\n  t['\\u3359'] = '1\\u70B9';\n  t['\\u335A'] = '2\\u70B9';\n  t['\\u335B'] = '3\\u70B9';\n  t['\\u335C'] = '4\\u70B9';\n  t['\\u335D'] = '5\\u70B9';\n  t['\\u335E'] = '6\\u70B9';\n  t['\\u335F'] = '7\\u70B9';\n  t['\\u3360'] = '8\\u70B9';\n  t['\\u3361'] = '9\\u70B9';\n  t['\\u3362'] = '10\\u70B9';\n  t['\\u3363'] = '11\\u70B9';\n  t['\\u3364'] = '12\\u70B9';\n  t['\\u3365'] = '13\\u70B9';\n  t['\\u3366'] = '14\\u70B9';\n  t['\\u3367'] = '15\\u70B9';\n  t['\\u3368'] = '16\\u70B9';\n  t['\\u3369'] = '17\\u70B9';\n  t['\\u336A'] = '18\\u70B9';\n  t['\\u336B'] = '19\\u70B9';\n  t['\\u336C'] = '20\\u70B9';\n  t['\\u336D'] = '21\\u70B9';\n  t['\\u336E'] = '22\\u70B9';\n  t['\\u336F'] = '23\\u70B9';\n  t['\\u3370'] = '24\\u70B9';\n  t['\\u33E0'] = '1\\u65E5';\n  t['\\u33E1'] = '2\\u65E5';\n  t['\\u33E2'] = '3\\u65E5';\n  t['\\u33E3'] = '4\\u65E5';\n  t['\\u33E4'] = '5\\u65E5';\n  t['\\u33E5'] = '6\\u65E5';\n  t['\\u33E6'] = '7\\u65E5';\n  t['\\u33E7'] = '8\\u65E5';\n  t['\\u33E8'] = '9\\u65E5';\n  t['\\u33E9'] = '10\\u65E5';\n  t['\\u33EA'] = '11\\u65E5';\n  t['\\u33EB'] = '12\\u65E5';\n  t['\\u33EC'] = '13\\u65E5';\n  t['\\u33ED'] = '14\\u65E5';\n  t['\\u33EE'] = '15\\u65E5';\n  t['\\u33EF'] = '16\\u65E5';\n  t['\\u33F0'] = '17\\u65E5';\n  t['\\u33F1'] = '18\\u65E5';\n  t['\\u33F2'] = '19\\u65E5';\n  t['\\u33F3'] = '20\\u65E5';\n  t['\\u33F4'] = '21\\u65E5';\n  t['\\u33F5'] = '22\\u65E5';\n  t['\\u33F6'] = '23\\u65E5';\n  t['\\u33F7'] = '24\\u65E5';\n  t['\\u33F8'] = '25\\u65E5';\n  t['\\u33F9'] = '26\\u65E5';\n  t['\\u33FA'] = '27\\u65E5';\n  t['\\u33FB'] = '28\\u65E5';\n  t['\\u33FC'] = '29\\u65E5';\n  t['\\u33FD'] = '30\\u65E5';\n  t['\\u33FE'] = '31\\u65E5';\n  t['\\uFB00'] = 'ff';\n  t['\\uFB01'] = 'fi';\n  t['\\uFB02'] = 'fl';\n  t['\\uFB03'] = 'ffi';\n  t['\\uFB04'] = 'ffl';\n  t['\\uFB05'] = '\\u017Ft';\n  t['\\uFB06'] = 'st';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = ' \\u064C\\u0651';\n  t['\\uFC5F'] = ' \\u064D\\u0651';\n  t['\\uFC60'] = ' \\u064E\\u0651';\n  t['\\uFC61'] = ' \\u064F\\u0651';\n  t['\\uFC62'] = ' \\u0650\\u0651';\n  t['\\uFC63'] = ' \\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '_';\n  t['\\uFE4E'] = '_';\n  t['\\uFE4F'] = '_';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ps_parser = __w_pdfjs_require__(144);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '2.0.303';\nvar pdfjsBuild = '55e3f97a';\nvar pdfjsCoreWorker = __w_pdfjs_require__(74);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _pdf_manager = __w_pdfjs_require__(127);\n\nvar _is_node = __w_pdfjs_require__(44);\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.303';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\n  var globalScope = __w_pdfjs_require__(76);\n  var isNodeJS = __w_pdfjs_require__(44);\n  var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n  var isAndroid = /Android/.test(userAgent);\n  var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\n  var isIE = userAgent.indexOf('Trident') >= 0;\n  var isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\n  var isSafari = /Safari\\//.test(userAgent) && !/(Chrome\\/|Android\\s)/.test(userAgent);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  if (typeof PDFJS === 'undefined') {\n    globalScope.PDFJS = {};\n  }\n  PDFJS.compatibilityChecked = true;\n  (function checkNodeBtoa() {\n    if (globalScope.btoa || !isNodeJS()) {\n      return;\n    }\n    globalScope.btoa = function (chars) {\n      return Buffer.from(chars, 'binary').toString('base64');\n    };\n  })();\n  (function checkNodeAtob() {\n    if (globalScope.atob || !isNodeJS()) {\n      return;\n    }\n    globalScope.atob = function (input) {\n      return Buffer.from(input, 'base64').toString('binary');\n    };\n  })();\n  (function checkOnBlobSupport() {\n    if (isIE || isIOSChrome) {\n      PDFJS.disableCreateObjectURL = true;\n    }\n  })();\n  (function checkNavigatorLanguage() {\n    if (typeof navigator === 'undefined') {\n      return;\n    }\n    if ('language' in navigator) {\n      return;\n    }\n    PDFJS.locale = navigator.userLanguage || 'en-US';\n  })();\n  (function checkRangeRequests() {\n    if (isSafari || isIOS) {\n      PDFJS.disableRange = true;\n      PDFJS.disableStream = true;\n    }\n  })();\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      PDFJS.maxCanvasPixels = 5242880;\n    }\n  })();\n  (function checkFullscreenSupport() {\n    if (!hasDOM) {\n      return;\n    }\n    if (isIE && window.parent !== window) {\n      PDFJS.disableFullscreen = true;\n    }\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    Array.prototype.includes = __w_pdfjs_require__(77);\n  })();\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = __w_pdfjs_require__(80);\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(82);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(84);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(87);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(106);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = __w_pdfjs_require__(122);\n  })();\n}\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(78);\nmodule.exports = __w_pdfjs_require__(7).Array.includes;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar $includes = __w_pdfjs_require__(47)(true);\n$export($export.P, 'Array', {\n  includes: function includes(el) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n__w_pdfjs_require__(48)('includes');\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(81);\nmodule.exports = __w_pdfjs_require__(7).Math.log2;\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(83);\nmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(85);\nmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(86) });\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(88);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(97);\n__w_pdfjs_require__(104);\n__w_pdfjs_require__(105);\nmodule.exports = __w_pdfjs_require__(7).Promise;\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(89)(true);\n__w_pdfjs_require__(51)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar defined = __w_pdfjs_require__(30);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(91);\nvar descriptor = __w_pdfjs_require__(28);\nvar setToStringTag = __w_pdfjs_require__(24);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(12)(IteratorPrototype, __w_pdfjs_require__(4)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar dPs = __w_pdfjs_require__(92);\nvar enumBugKeys = __w_pdfjs_require__(53);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(27)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(54).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar anObject = __w_pdfjs_require__(8);\nvar getKeys = __w_pdfjs_require__(23);\nmodule.exports = __w_pdfjs_require__(13) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(9);\nvar toIObject = __w_pdfjs_require__(17);\nvar arrayIndexOf = __w_pdfjs_require__(47)(false);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(9);\nvar toObject = __w_pdfjs_require__(35);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(48);\nvar step = __w_pdfjs_require__(96);\nvar Iterators = __w_pdfjs_require__(19);\nvar toIObject = __w_pdfjs_require__(17);\nmodule.exports = __w_pdfjs_require__(51)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar global = __w_pdfjs_require__(5);\nvar ctx = __w_pdfjs_require__(11);\nvar classof = __w_pdfjs_require__(33);\nvar $export = __w_pdfjs_require__(6);\nvar isObject = __w_pdfjs_require__(3);\nvar aFunction = __w_pdfjs_require__(16);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(25);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar task = __w_pdfjs_require__(57).set;\nvar microtask = __w_pdfjs_require__(102)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\nvar promiseResolve = __w_pdfjs_require__(59);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(4)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) domain.exit();\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(38)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(24)($Promise, PROMISE);\n__w_pdfjs_require__(103)(PROMISE);\nWrapper = __w_pdfjs_require__(7)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(60)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(19);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar Iterators = __w_pdfjs_require__(19);\nmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar macrotask = __w_pdfjs_require__(57).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(18)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar dP = __w_pdfjs_require__(15);\nvar DESCRIPTORS = __w_pdfjs_require__(13);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar core = __w_pdfjs_require__(7);\nvar global = __w_pdfjs_require__(5);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar promiseResolve = __w_pdfjs_require__(59);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(107);\n__w_pdfjs_require__(118);\n__w_pdfjs_require__(120);\nmodule.exports = __w_pdfjs_require__(7).WeakMap;\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(61)(0);\nvar redefine = __w_pdfjs_require__(10);\nvar meta = __w_pdfjs_require__(39);\nvar assign = __w_pdfjs_require__(111);\nvar weak = __w_pdfjs_require__(113);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar validate = __w_pdfjs_require__(62);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(114)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(109);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar isArray = __w_pdfjs_require__(110);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(18);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(23);\nvar gOPS = __w_pdfjs_require__(112);\nvar pIE = __w_pdfjs_require__(40);\nvar toObject = __w_pdfjs_require__(35);\nvar IObject = __w_pdfjs_require__(29);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(14)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(38);\nvar getWeak = __w_pdfjs_require__(39).getWeak;\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(25);\nvar createArrayMethod = __w_pdfjs_require__(61);\nvar $has = __w_pdfjs_require__(9);\nvar validate = __w_pdfjs_require__(62);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar $export = __w_pdfjs_require__(6);\nvar redefine = __w_pdfjs_require__(10);\nvar redefineAll = __w_pdfjs_require__(38);\nvar meta = __w_pdfjs_require__(39);\nvar forOf = __w_pdfjs_require__(25);\nvar anInstance = __w_pdfjs_require__(36);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar $iterDetect = __w_pdfjs_require__(60);\nvar setToStringTag = __w_pdfjs_require__(24);\nvar inheritIfRequired = __w_pdfjs_require__(115);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar setPrototypeOf = __w_pdfjs_require__(116).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar anObject = __w_pdfjs_require__(8);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(11)(Function.call, __w_pdfjs_require__(117).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(40);\nvar createDesc = __w_pdfjs_require__(28);\nvar toIObject = __w_pdfjs_require__(17);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar has = __w_pdfjs_require__(9);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(13) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(119)('WeakMap');\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = new Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(121)('WeakMap');\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar aFunction = __w_pdfjs_require__(16);\nvar ctx = __w_pdfjs_require__(11);\nvar forOf = __w_pdfjs_require__(25);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(123);\nmodule.exports = __w_pdfjs_require__(7).Object.values;\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar $values = __w_pdfjs_require__(124)(false);\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(23);\nvar toIObject = __w_pdfjs_require__(17);\nvar isEnum = __w_pdfjs_require__(40).f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      if (isEnum.call(O, key = keys[i++])) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }return result;\n  };\n};\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(126).ReadableStream;\n}\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _document = __w_pdfjs_require__(128);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _annotation = __w_pdfjs_require__(134);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _evaluator = __w_pdfjs_require__(135);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict,\n          valueArray = null,\n          loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n        var value = getArray ? dict.getArray(key) : dict.get(key);\n        if (value !== undefined) {\n          if (!valueArray) {\n            valueArray = [];\n          }\n          valueArray.push(value);\n        }\n        if (++loopCount > MAX_LOOP_COUNT) {\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n          return valueArray ? valueArray[0] : undefined;\n        }\n        dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n        return undefined;\n      }\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n        return valueArray[0];\n      }\n      return _primitives.Dict.merge(this.xref, valueArray);\n    },\n    get content() {\n      return this.getPageProp('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _jbig = __w_pdfjs_require__(131);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos, startPos) {\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data;\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data;\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _stream = __w_pdfjs_require__(2);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cmap = __w_pdfjs_require__(136);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _fonts = __w_pdfjs_require__(137);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _pattern = __w_pdfjs_require__(141);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _bidi = __w_pdfjs_require__(142);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _metrics = __w_pdfjs_require__(143);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _murmurhash = __w_pdfjs_require__(145);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _image = __w_pdfjs_require__(146);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref2) {\n    var _this = this;\n\n    var pdfManager = _ref2.pdfManager,\n        xref = _ref2.xref,\n        handler = _ref2.handler,\n        pageIndex = _ref2.pageIndex,\n        idFactory = _ref2.idFactory,\n        fontCache = _ref2.fontCache,\n        builtInCMapCache = _ref2.builtInCMapCache,\n        _ref2$options = _ref2.options,\n        options = _ref2$options === undefined ? null : _ref2$options,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var _this2 = this;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: inline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintJpegXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: inline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref3) {\n      var _this8 = this;\n\n      var stream = _ref3.stream,\n          task = _ref3.task,\n          resources = _ref3.resources,\n          operatorList = _ref3.operatorList,\n          _ref3$initialState = _ref3.initialState,\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref4) {\n      var _this9 = this;\n\n      var stream = _ref4.stream,\n          task = _ref4.task,\n          resources = _ref4.resources,\n          _ref4$stateManager = _ref4.stateManager,\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n          _ref4$combineTextItem = _ref4.combineTextItems,\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n          sink = _ref4.sink,\n          _ref4$seenStyles = _ref4.seenStyles,\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embededUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _font_renderer = __w_pdfjs_require__(139);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _type1_parser = __w_pdfjs_require__(140);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (VALID_TABLES.indexOf(table.tag) < 0) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 6;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: this.fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileCharString(code, cmds, this);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/build/pdf.worker.js\n// module id = wk5V\n// module chunks = 0"],"sourceRoot":""}